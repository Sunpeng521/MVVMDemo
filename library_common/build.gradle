import com.phone.versionplugin.BuildVersions

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    //ARouter需要用到
    id 'kotlin-kapt'
    //id 'newlens'
    id 'com.phone.versionplugin'
}

////apply plugin: 'newlens'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


android {
    compileSdk BuildVersions.compileSdk

    defaultConfig {
        minSdk BuildVersions.minSdk
        targetSdk BuildVersions.targetSdk
        versionCode BuildVersions.versionCode
        versionName BuildVersions.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        //java代码中引用的定义形式
//        buildConfigField "String", "CUR_PROJECT", "\"${CUR_PROJECT}\""
//        buildConfigField "Boolean", "DEBUG_TAG", "${DEBUG_TAG}"
//        buildConfigField "String", "DEBUG_LOGIN_SN", "\"${DEBUG_LOGIN_SN}\""
//        buildConfigField "String", "DEBUG_LOGIN_MODEL", "\"${DEBUG_LOGIN_MODEL}\""
//        buildConfigField "String", "DEBUG_LOGIN_VENDOR", "\"${DEBUG_LOGIN_VENDOR}\""
//        buildConfigField "String", "DEBUG_LOGIN_TYPE", "\"${DEBUG_LOGIN_TYPE}\""
//        buildConfigField "String", "SERVER_UP_URL", "\"${SERVER_UP_URL}\""
//        buildConfigField "String", "VIDEO_EXTRANET_IP", "\"${VIDEO_EXTRANET_IP}\""
//        buildConfigField "String", "LOAD_H5_UP", "\"${LOAD_H5_UP}\""
//        buildConfigField "String", "TIME_SERVER_IP", "\"${TIME_SERVER_IP}\""
//        buildConfigField "Boolean", "SUPPORT_TIMESHIFT", "${SUPPORT_TIMESHIFT}"
//        buildConfigField "Boolean", "IS_USE_IJKPLAYER_FOR_VOD", "${IS_USE_IJKPLAYER_FOR_VOD}"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    //android 模块下开启DataBinding
    dataBinding {
        enabled = true
    }

    //开启Java1_8 能够使用lambda表达式
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'src/main/java/library/AndroidManifest.xml'
        }
    }

    buildTypes {
        release {
            //java代码中引用的定义形式
            buildConfigField "Boolean", "IS_MODULE", "${isModule}"
            buildConfigField "Boolean", "IS_RELEASE", "${isRelease}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            //java代码中引用的定义形式
            buildConfigField "Boolean", "IS_MODULE", "${isModule}"
            buildConfigField "Boolean", "IS_RELEASE", "${isRelease}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //给Module 内的资源名增加前缀, 避免资源名冲突
    resourcePrefix "library_"
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':library_base')
    //cardview导入
    api "androidx.cardview:cardview:$BuildVersions.cardview_version"


    //apache StringUtils导入
    api "org.apache.commons:commons-lang3:$BuildVersions.commons_lang_version"
    //apache Base64导入
    api "commons-codec:commons-codec:$BuildVersions.commons_codec_version"
    //kotlin databinding
    kapt "com.android.databinding:compiler:$BuildVersions.databinding_version"


    //rxpermissions框架導入
    api "com.github.tbruyelle:rxpermissions:$BuildVersions.rxpermissions_version"

    //2.AutoDispose解决rxjava导致的内存泄漏的框架
    api "com.uber.autodispose:autodispose-android-archcomponents:$BuildVersions.autodispose_version"

    //fastjson(阿里云json解析框架导入)
    api "com.alibaba:fastjson:$BuildVersions.fastjson_version"
//    api "com.alibaba:fastjson:$BuildVersions.fastjson_version.android"

    //图片和视频选择框架导入（这个框架的手机拍照功能有bug，不要使用）
    // PictureSelector basic (Necessary)
    api "io.github.lucksiege:pictureselector:$BuildVersions.picture_selector_version"
    // image compress library (Not necessary)
    api "io.github.lucksiege:compress:$BuildVersions.picture_selector_version"
    // uCrop library (Not necessary)
    api "io.github.lucksiege:ucrop:$BuildVersions.picture_selector_version"
    // simple camerax library (Not necessary)
    api "io.github.lucksiege:camerax:$BuildVersions.picture_selector_version"

    //刷新和加载Layout导入,核心必须依赖
    api "com.scwang.smart:refresh-layout-kernel:$BuildVersions.refresh_layout_version"
    api "com.scwang.smart:refresh-header-classics:$BuildVersions.refresh_layout_version"    //经典刷新头
//    api "com.scwang.smart:refresh-header-radar:$BuildVersions.refresh_layout_version"       //雷达刷新头
//    api "com.scwang.smart:refresh-header-falsify:$BuildVersions.refresh_layout_version"     //虚拟刷新头
    api "com.scwang.smart:refresh-header-material:$BuildVersions.refresh_layout_version"    //谷歌刷新头
//    api "com.scwang.smart:refresh-header-two-level:$BuildVersions.refresh_layout_version"   //二级刷新头
//    api "com.scwang.smart:refresh-footer-ball:$BuildVersions.refresh_layout_version"        //球脉冲加载
//    api "com.scwang.smart:refresh-footer-classics:$BuildVersions.refresh_layout_version"    //经典加载

    api "com.github.hackware1993:MagicIndicator:$BuildVersions.magic_indicator_version"

    //选择时间和省市县三级联动框架
    api "com.contrarywind:Android-PickerView:$BuildVersions.picker_view_version"
    //Android路由（用于不同app之间的跳转）
//    api "com.alibaba:arouter-api:$BuildVersions.arouter_api_version"
    kapt "com.alibaba:arouter-compiler:$BuildVersions.arouter_compiler_version"

//    //leakcanary导入（检测内存泄漏框架，直接導入框架就可以了，2.7版本的不用配置）
//    debugApi "com.squareup.leakcanary:leakcanary-android:$BuildVersions.leakcanary_version"

//    //工具库
//    implementation "com.blankj:utilcodex:$BuildVersions.utilcodex_version"

    //日志打印框架
    api "com.orhanobut:logger:$BuildVersions.logger_version"

    //jackson
    api "com.fasterxml.jackson.core:jackson-databind:$BuildVersions.jackson_databind_version"
    compileOnly "org.projectlombok:lombok:$BuildVersions.lombok_version"
    kapt "org.projectlombok:lombok:$BuildVersions.lombok_version"
    api "com.github.hackware1993:MagicIndicator:$BuildVersions.magic_indicator_version"

    api "com.github.lzyzsd:jsbridge:$BuildVersions.jsbridge_version"


}
