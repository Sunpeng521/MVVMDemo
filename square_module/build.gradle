if (isModule.toBoolean()) {
    //可独立运行的app
    apply plugin: 'com.android.application'
} else {
    //被依赖的library
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

android {
    compileSdkVersion 31
//    buildToolsVersion "31.0.3"


    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        if (isModule.toBoolean()) {
            //可独立运行的app
            applicationId "com.phone.square_module"
        } else {
            //被依赖的library
        }
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //android 模块下开启DataBinding
    dataBinding {
        enabled = true
    }

    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }

    //开启Java11 能够使用lambda表达式
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    kotlinOptions {
//        jvmTarget = "1.8"
//    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/java/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/java/library/AndroidManifest.xml'
                java {//移除module包下的代码
                    exclude 'module'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':common_library')
    implementation project(path: ':base64_and_file')

    //Android路由（用于不同app之间的跳转）
//    implementation 'com.alibaba:arouter-api:1.5.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    kapt 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    kapt 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'


}
