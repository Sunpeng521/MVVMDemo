//body app（不可单独运行）
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.huawei.agconnect'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.phone.rxjava2andretrofit2"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "2.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        externalNativeBuild {
//            cmake {
//                cppFlags ''
//            }
//        }

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.phone.rxjava2andretrofit2",
                JPUSH_APPKEY : "8e2573e36e6e9c4d624d29d4", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

    }

    //android 模块下开启DataBinding（必须添加，即使此module没有用到也要添加）
    dataBinding {
        enabled = true
    }

    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }

    //开启Java1.8 能够使用lambda表达式
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    kotlinOptions {
//        jvmTarget = "1.8"
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    ndkVersion '21.1.6352462'
//    externalNativeBuild {
//        cmake {
//            path file('src/main/cpp/CMakeLists.txt')
//            version '3.10.2'
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if (isModule.toBoolean()) {
        //可独立运行的app
        implementation project(path: ':main_module')
    } else {
        //被依赖的library
        implementation project(path: ':main_module')
        implementation project(path: ':square_module')
        implementation project(path: ':mine_module')
        implementation project(path: ':first_page_module')
        implementation project(path: ':resource_module')
        implementation project(path: ':project_module')
    }
    
    //极光推送JPush
    implementation 'cn.jiguang.sdk:jpush:4.7.0'
    //极光推送JCore
    implementation 'cn.jiguang.sdk:jcore:3.2.4'
//    // 接入小米厂商
//    implementation 'cn.jiguang.sdk.plugin:xiaomi:4.0.0'

}
